<?php
/* @var $this FeedbackController */
/* @var $model Feedback */
/* @var $form CActiveForm */
?>

<?php
    $this->beginWidget('zii.widgets.jui.CJuiDialog',array(
    'id'=>'mydialog',
    // additional javascript options for the dialog plugin
    'options'=>array(
    'title'=>'Dialog box 1',
    'autoOpen'=>false,
    'width'=>'500'
    ),
    )
    );
?>

<div id="forms">
<div class="form">

    <?php
     $form=$this->beginWidget('CActiveForm', array(
        'id'=>'feedback-form',
        'enableAjaxValidation'=>false,
        'enableClientValidation'=>true,
        'htmlOptions' => array('enctype' => 'multipart/form-data'),
    )); ?>

    <p class="note">Fields with <span class="required">*</span> are required.</p>

    <?php echo $form->errorSummary($model); ?>

    <div class="row">
        <?php echo $form->labelEx($model,'sender_mail'); ?>
        <?php echo $form->textField($model,'sender_mail'); ?>
        <?php echo $form->error($model,'sender_mail'); ?>
    </div>



    <div class="row">
        <?php echo $form->labelEx($model,'phone'); ?>
        <?php echo $form->textField($model,'phone'); ?>
        <?php echo $form->error($model,'phone'); ?>
    </div>

    <div class="row">
        <?php echo $form->labelEx($model,'sender_name'); ?>
        <?php echo $form->textField($model,'sender_name'); ?>
        <?php echo $form->error($model,'sender_name'); ?>
    </div>

    <div class="row">
        <?php echo $form->labelEx($model,'subject'); ?>
        <?php echo $form->textField($model,'subject'); ?>
        <?php echo $form->error($model,'subject'); ?>
    </div>

    <div class="row">
        <?php echo $form->labelEx($model,'body'); ?>
        <?php echo $form->textArea($model,'body',array('rows'=>6, 'cols'=>50)); ?>
        <?php echo $form->error($model,'body'); ?>
    </div>


    <?php $this->endWidget(); ?>

</div><!-- form -->

    <!-- The file input field used as target for the file upload widget -->
    <input id="fileupload" type="file" name="files[]" multiple>
    <br>
    <br>
    <!-- The global progress bar -->
    <!--            <div id="progress" class="progress">-->
    <!--                <div class="progress-bar progress-bar-success"></div>-->
    <!--            </div>-->
    <!-- The container for the uploaded files -->
    <div id="files" class="files"></div>
    <hr />

    <div class="row buttons" id="buttons">
        <?php echo CHtml::button(Yii::t('frontend','Отправить'),array('id'=>'formSubmit'));?>
    </div>
</div>

<?php
$this->endWidget('zii.widgets.jui.CJuiDialog');

echo CHtml::link(Yii::t('frontend','Написать нам'), '#', array(
    'onclick'=>'$("#mydialog").dialog("open"); return false;',
));

?>

<script>

    $(document).on("click","#delFile",function(e){
        e.preventDefault();
        $.ajax({
            type:"POST",
            url:"/backend/feedback/feedback/deleteFile",
            data:{
                file:$(this).data("file")
            },
            success:function(response){
                var resp = JSON.parse(response);
                if(resp.file){
                    document.getElementById(resp.divName).remove();
                    document.getElementById("hidden-"+resp.divName).remove();
                }
            }
        });
    });

    $(document).on("click","#formSubmit",function(){
        $.ajax({
            type:"POST",
            url:"/backend/feedback/feedback/feedback",
            beforeSend:function(){
                $("#feedback-form").css({"opacity":"0.4"});
                $("#buttons").append("<img src='/img/arrow-loader.gif' id='arrowLoader' />");
            },
            data:
                $("#feedback-form").serialize(),
            success:function(response){
                var resp = JSON.parse(response);
                if(resp === 'success'){
                    $("#feedback-form").css({"opacity":"1.0"});
                    document.getElementById('arrowLoader').remove();
                    $("<div class='alert alert-success'><span><h2>Success!</h2></span></div>").insertBefore($("#buttons"));
                    var form = $("form");
                    $.each(form,function(index){
                        form[index].reset();
                        $("#Feedback_body").parent().nextUntil("form").remove();
                    });
                    $("#files").html("");
                    setTimeout(function(){
                        $(".alert").fadeOut('slow');
                    },3000);
                } else {
                    var list = '';
                    $.each(resp,function(index,value){
                            list +="<li>"+value+"</li>";
                    });
                    $("#feedback-form_es_ ul").html(list);
                    $("#feedback-form_es_").css("display","block");
                }
            }
        });
    });
</script>


<!--<script src="//ajax.googleapis.com/ajax/libs/jquery/1.10.1/jquery.min.js"></script>-->
<!-- The jQuery UI widget factory, can be omitted if jQuery UI is already included -->
<script src="/js_plugins/fileupload/js/vendor/jquery.ui.widget.js"></script>
<!-- The Load Image plugin is included for the preview images and image resizing functionality -->
<script src="/js_plugins/fileupload/js/load-image.min.js"></script>
<!-- The Canvas to Blob plugin is included for image resizing functionality -->
<!--<script src="http://blueimp.github.io/JavaScript-Canvas-to-Blob/js/canvas-to-blob.min.js"></script>-->
<!-- Bootstrap JS is not required, but included for the responsive demo navigation -->
<!--<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0-rc1/js/bootstrap.min.js"></script>-->
<!-- The Iframe Transport is required for browsers without support for XHR file uploads -->
<script src="/js_plugins/fileupload/js/jquery.iframe-transport.js"></script>
<!-- The basic File Upload plugin -->
<script src="/js_plugins/fileupload/js/jquery.fileupload.js"></script>
<!-- The File Upload processing plugin -->
<script src="/js_plugins/fileupload/js/jquery.fileupload-process.js"></script>
<!-- The File Upload image preview & resize plugin -->
<script src="/js_plugins/fileupload/js/jquery.fileupload-image.js"></script>
<!-- The File Upload audio preview plugin -->
<!--<script src="/js_plugins/fileupload/js/jquery.fileupload-audio.js"></script>-->
<!-- The File Upload video preview plugin -->
<!--<script src="/js_plugins/fileupload/js/jquery.fileupload-video.js"></script>-->
<!-- The File Upload validation plugin -->
<script src="/js_plugins/fileupload/js/jquery.fileupload-validate.js"></script>
<script>
    /*jslint unparam: true, regexp: true */
    /*global window, $ */
    $(function () {
        'use strict';
        // Change this to the location of your server-side upload handler:
        var url = '/js_plugins/fileupload/server/php/',
            uploadButton = $('<button/>')
                .addClass('btn btn-primary')
                .prop('disabled', true)
                .text('Processing...')
                .on('click', function () {
                    var $this = $(this),
                        data = $this.data();
                    $this
                        .off('click')
                        .text('Abort')
                        .on('click', function () {
                            $this.remove();
                            data.abort();
                        });
                    data.submit().always(function () {
                        $this.remove();
                    });
                });
        $('#fileupload').fileupload({
            url: url,
            dataType: 'json',
            autoUpload: false,
            acceptFileTypes: /(\.|\/)(gif|jpe?g|png|pdf)$/i,
            maxFileSize: 5000000, // 5 MB
            // Enable image resizing, except for Android and Opera,
            // which actually support image resizing, but fail to
            // send Blob objects via XHR requests:
            disableImageResize: /Android(?!.*Chrome)|Opera/
                .test(window.navigator.userAgent),
            previewMaxWidth: 100,
            previewMaxHeight: 100,
            previewCrop: true
        }).on('fileuploadadd', function (e, data) {
                data.context = $('<div style="float:left; margin: 20px;" />').appendTo('#files');
                $.each(data.files, function (index, file) {
                    var node = $('<span id="'+file.name+'"/>').text(file.name);
                    if (!index) {
                        node
                            .append('<br>')
                            .append(uploadButton.clone(true).data(data)
                            );
                    }
                    node.appendTo(data.context);
                });
            }).on('fileuploadprocessalways', function (e, data) {
                var index = data.index,
                    file = data.files[index],
                    node = $(data.context.children()[index]);
                if (file.preview) {
                    node
                        .prepend('<br>')
                        .prepend(file.preview);
                }
                if (file.error) {
                    node
                        .append('<br>')
                        .append(file.error);
                }
                if (index + 1 === data.files.length) {
                    data.context.find('button')
                        .text('Upload')
                        .prop('disabled', !!data.files.error);
                }
            }).on('fileuploadprogressall', function (e, data) {
                var progress = parseInt(data.loaded / data.total * 100, 10);
                $('#progress .progress-bar').css(
                    'width',
                    progress + '%'
                );
            }).on('fileuploaddone', function (e, data) {
                $.each(data.result.files, function (index, file) {
                    var node = $(data.context.children()[index]);
                    $('<a href="#"id="delFile" data-filename="'+$(node).attr("id")+'" data-file="'+file.name+'">delete</a>').insertAfter($(node).children(':last-child'));
                    $(node).parent().attr("id",file.name);
                    $("#feedback-form").append("<div class='row' id='hidden-"+file.name+"'><input type='hidden' name='Feedback[files][]' value='"+JSON.stringify(file)+"' /></div>");
                });
            }).on('fileuploadfail', function (e, data) {
                $.each(data.result.files, function (index, file) {
                    var error = $('<span/>').text(file.error);
                    $(data.context.children()[index])
                        .append('<br>')
                        .append(error);
                });
            }).prop('disabled', !$.support.fileInput)
            .parent().addClass($.support.fileInput ? undefined : 'disabled');
    });
</script>
